name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v0.1.1, etc.

jobs:
  build-and-publish:
    name: Build and publish to PyPI
    runs-on: ubuntu-latest
    
    # IMPORTANT: this permission is mandatory for trusted publishing
    permissions:
      id-token: write
    
    steps:
    - name: Checkout source
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build twine
    
    - name: Verify version consistency
      run: |
        # Extract version from tag (remove 'v' prefix if present)
        TAG_VERSION=${GITHUB_REF#refs/tags/}
        TAG_VERSION=${TAG_VERSION#v}
        
        # Get version from pyproject.toml
        PYPROJECT_VERSION=$(python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])" 2>/dev/null || python -c "import tomli; print(tomli.load(open('pyproject.toml', 'rb'))['project']['version'])" 2>/dev/null || grep 'version.*=' pyproject.toml | sed 's/.*"\(.*\)".*/\1/')
        
        # Get version from __init__.py
        INIT_VERSION=$(python -c "import fmi_bd2cmake; print(fmi_bd2cmake.__version__)")
        
        echo "Tag version: $TAG_VERSION"
        echo "pyproject.toml version: $PYPROJECT_VERSION"
        echo "__init__.py version: $INIT_VERSION"
        
        # Check if versions match
        if [ "$TAG_VERSION" != "$PYPROJECT_VERSION" ] || [ "$TAG_VERSION" != "$INIT_VERSION" ]; then
          echo "❌ Version mismatch detected!"
          echo "Please ensure the tag version ($TAG_VERSION) matches pyproject.toml ($PYPROJECT_VERSION) and __init__.py ($INIT_VERSION)"
          exit 1
        fi
        
        echo "✅ All versions match: $TAG_VERSION"
    
    - name: Build package
      run: |
        python -m build
    
    - name: Verify package contents
      run: |
        python -m twine check dist/*
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        # Using trusted publishing - no API token needed
        # The repository must be configured in PyPI's trusted publishing settings
        verbose: true